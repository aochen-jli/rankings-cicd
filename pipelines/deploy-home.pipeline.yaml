---
resource_types:
  - name: kubernetes
    type: docker-image
    source:
      repository: zlabjp/kubernetes-resource
      tag: "1.17"

resources:
  - name: rankings-intl
    type: git
    icon: github
    source:
      uri: https://github.com/vbrunsch/rankings
      branch: main
      paths:
        - visualizations/values.yaml
  - name: home-app
    type: git
    icon: github
    source:
      uri: https://github.com/aochen-jli/visualizations-home
      branch: main
      ignore_paths:
        - README.md
        - .gitignore
  - name: docker
    type: docker-image
    icon: docker
    source:
      repository: registry.nocovid.group/visualizations-home
      username: ((regcred.docker-username))
      password: ((regcred.docker-password))
      tag_as_latest: true
  - name: kubectl
    type: kubernetes
    icon: kubernetes
    source:
      server: https://kubernetes:443
      namespace: default
      certificate_authority: ((cluster-auth.certificate-authority-data))
      token: ((cluster-auth.token))

jobs:
  - name: build-image
    serial: true
    plan:
      - get: home-app
        trigger: true
      - put: prune-system
        resource: kubectl
        params:
          kubectl: >
            apply -f https://raw.githubusercontent.com/aochen-jli/visualizations-cicd/main/pipelines/jobs/prune-host-docker-system.job.yaml
          wait_until_ready: 600
      - put: prune-registry
        resource: kubectl
        params:
          kubectl: >
            exec -it $(kubectl get pods -l app=docker-registry -o custom-columns=:metadata.name)
            --
            /bin/registry garbage-collect /etc/docker/registry/config.yml --delete-untagged
          wait_until_ready: 600
      - put: docker
        params:
          build: home-app
        get_params: {skip_download: true}

  - name: deploy
    serial: true
    plan:
      - get: rankings-intl
        trigger: true
      - get: home-app
        passed: [build-image]
        trigger: true
      - task: get-regions
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: mikefarah/yq
              tag: "4"
          inputs:
            - name: rankings-intl
          run:
            path: sh
            args:
              - -exc
              - |
                printf "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: visualizations-current-regions\ndata:\n  yaml: |\n" >> regions/config.yaml
                yq eval '.regions' rankings-intl/visualizations/values.yaml | awk '{ print "    " $0 }' >> regions/config.yaml
                cat regions/config.yaml
          outputs:
            - name: regions
      - put: update-config
        resource: kubectl
        params:
          kubectl: apply -f regions/config.yaml
          wait_until_ready: 0
      - put: upgrade-deployment
        resource: kubectl
        params:
          kubectl: apply -f home-app/ci/
          wait_until_ready: 600
      - put: restart-deployment
        resource: kubectl
        params:
          kubectl: rollout restart -f home-app/ci/visualizations-home.deployment.yaml
          wait_until_ready: 600
